<?xml version='1.0'?>
    <sdf version='1.4'>
      
      <model name="RP_robot_model_0">
        
        <static>false</static>
        
        
        <link name='chassis'>
          <pose>0 0 .1 0 0 0</pose>
          
          <collision name='collision'>
            <geometry>
              <box>
                <size>.4 .2 .1</size>
              </box>
            </geometry>
          </collision>

          <visual name='visual'>
            <geometry>
              <box>
                <size>.4 .2 .1</size>
              </box>
            </geometry>
            
            <material>
							<ambient>0 0 1 1</ambient>
							<diffuse>0 0 1 1</diffuse>
							<specular>0.1 0.1 0.1 1</specular>
							<emissive>0 0 1 1</emissive>
						</material>
						
          </visual>

          <collision name='caster_collision'>
            <pose>-0.15 0 -0.05 0 0 0</pose>
            <geometry>
              <sphere>
              <radius>.05</radius>
            </sphere>
          </geometry>

          <surface>
            <friction>
              <ode>
                <mu>0</mu>
                <mu2>0</mu2>
                <slip1>1.0</slip1>
                <slip2>1.0</slip2>
              </ode>
            </friction>
          </surface>
        </collision>

        <visual name='caster_visual'>
          <pose>-0.15 0 -0.05 0 0 0</pose>
          <geometry>
            <sphere>
              <radius>.05</radius>
            </sphere>
          </geometry>
        </visual>
        
        <inertial ><!--name='chassis_inertial'>-->
			<mass>10.0</mass>
		</inertial>
      </link>
      
      
      <link name="left_wheel">
        <pose>0.1 0.13 0.1 0 1.5707 1.5707</pose>
        
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>.1</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </collision>
        
        
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>.1</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </visual>
      
      </link>

      
      
      <link name="right_wheel">
        <pose>0.1 -0.13 0.1 0 1.5707 1.5707</pose>
        
        <collision name="collision">
          <geometry>
            <cylinder>
              <radius>.1</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </collision>
        
        
        <visual name="visual">
          <geometry>
            <cylinder>
              <radius>.1</radius>
              <length>.05</length>
            </cylinder>
          </geometry>
        </visual>
      
      </link>
      
      
      
      <joint type="revolute" name="left_wheel_hinge">
        <pose>0 0 -0.03 0 0 0</pose>
        <child>left_wheel</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>

      
      
      
      <joint type="revolute" name="right_wheel_hinge">
        <pose>0 0 0.03 0 0 0</pose>
        <child>right_wheel</child>
        <parent>chassis</parent>
        <axis>
          <xyz>0 1 0</xyz>
        </axis>
      </joint>
      
      <!--
      <transmission name="right_trans">
		<type>transmission_interface/SimpleTransmission</type>
		
		<joint name="right_wheel_hinge">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>

		<actuator name="rightMotor">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		<mechanicalReduction>10</mechanicalReduction>
		</actuator>

	  </transmission>
      
      <transmission name="left_trans">
		<type>transmission_interface/SimpleTransmission</type>
		
		<joint name="left_wheel_hinge">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		</joint>

		<actuator name="leftMotor">
		<hardwareInterface>EffortJointInterface</hardwareInterface>
		<mechanicalReduction>10</mechanicalReduction>
		</actuator>

	  </transmission>
	  -->
	
	
	<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
		<alwaysOn>true</alwaysOn>
		<updateRate>50</updateRate>
		<leftJoint>left_wheel_hinge</leftJoint>
		<rightJoint>right_wheel_hinge</rightJoint>
		<wheelSeparation>0.25</wheelSeparation>
		<wheelDiameter>0.2</wheelDiameter>
		<torque>20</torque>
		<commandTopic>/RP_robot_model_0/cmd_vel</commandTopic>
		<odometryTopic>/RP_robot_model_0/odom_diffdrive</odometryTopic>
		<odometryFrame>odom</odometryFrame>
		<robotBaseFrame>base_footprint</robotBaseFrame>
	</plugin>  
	
	<!--
	<sensor type="camera" name="camera1">
		<update_rate>30.0</update_rate>

		<camera name="head">
			<horizontal_fov>1.3962634</horizontal_fov>
			
			<image>
				<width>800</width>
				<height>800</height>
				<format>R8G8B8</format>
			</image>
			
			<clip>
				<near>0.02</near>
				<far>300</far>
			</clip>
		</camera>

		<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
		  <alwaysOn>true</alwaysOn>
		  <updateRate>0.0</updateRate>
		  <cameraName>/RP_robot_model_0/camera1</cameraName>
		  <imageTopicName>image_raw</imageTopicName>
		  <cameraInfoTopicName>camera_info</cameraInfoTopicName>
		  <frameName>camera_link</frameName>
		  <hackBaseline>0.07</hackBaseline>
		  <distortionK1>0.0</distortionK1>
		  <distortionK2>0.0</distortionK2>
		  <distortionK3>0.0</distortionK3>
		  <distortionT1>0.0</distortionT1>
		  <distortionT2>0.0</distortionT2>
		</plugin>
	
	</sensor>
	-->
	
	<link name="camera1">
		<pose>0 0 .5 0 0 0</pose>
		
		<collision name='collision'>
			<!--
			<origin xyz="0 0 0" rpy="0 0 0"/>
			-->
			<geometry>
			  <box>
			  	 <size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
		</collision>

		<visual name='visual'>
			<!--
			<origin xyz="0 0 ${3*chassisHeight}" rpy="0 0 0"/>
			-->
			<geometry>
			  <!--
			  <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
			  -->
			  <box>
			  	<size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
			<!--
			<material name="blue"/>
			-->
		</visual>

		<!--
		<inertial name='inertial'>
			<mass value="${cameraMass}" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
		</inertial>
		-->
		
		<sensor name="sensorCameraRGBD" type="depth">
		<!--<sensor type="camera" name="sensorCameraRGBD">-->
			
			<!--
			<update_rate>30.0</update_rate>

			<camera name="cameraRGBD">
				<horizontal_fov>1.57</horizontal_fov>
			
				<image>
					<width>320</width>
					<height>240</height>
					<format>R8G8B8</format>
				</image>
			
				<clip>
					<near>0.02</near>
					<far>100</far>
				</clip>
				
				<lens>
					<type>gnomonical</type>
					<scale_to_hfov>true</scale_to_hfov>
					<cutoff_angle>1.57</cutoff_angle>
					<env_texture_size>512</env_texture_size>
				</lens>
			</camera>
			-->
			
			
        <camera name="cameraRGBD">
          <horizontal_fov>1.047</horizontal_fov>
          <image>
            <width>320</width>
            <height>240</height>
          </image>
          <clip>
            <near>0.1</near>
            <far>100</far>
          </clip>
        </camera>
        
        <always_on>1</always_on>
        <update_rate>30</update_rate>
        <visualize>true</visualize>
      
			<!--
			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
			  <alwaysOn>true</alwaysOn>
			  <updateRate>0.0</updateRate>
			  <cameraName>/RP_robot_model_0/camera1</cameraName>
			  <imageTopicName>image_raw</imageTopicName>
			  <cameraInfoTopicName>camera_info</cameraInfoTopicName>
			  <frameName>camera_link</frameName>
			  <hackBaseline>0.07</hackBaseline>
			  <distortionK1>0.0</distortionK1>
			  <distortionK2>0.0</distortionK2>
			  <distortionK3>0.0</distortionK3>
			  <distortionT1>0.0</distortionT1>
			  <distortionT2>0.0</distortionT2>
			</plugin>
			-->
			
			
			<plugin name="cameraRGBD_controller" filename="libgazebo_ros_openni_kinect.so">
				<baseline>0.2</baseline>
				<alwaysOn>true</alwaysOn>
				<updateRate>1.0</updateRate>
				<cameraName>cameraRGBD</cameraName>
				<imageTopicName>/RP_robot_model_0/depth/image_raw</imageTopicName>
				<cameraInfoTopicName>/RP_robot_model_0/depth/camera_info</cameraInfoTopicName>
				<depthImageTopicName>/RP_robot_model_0/depth/image_raw</depthImageTopicName>
				<depthImageInfoTopicName>/RP_robot_model_0/depth/camera_info</depthImageInfoTopicName>
				<pointCloudTopicName>/RP_robot_model_0/depth/points</pointCloudTopicName>
				<frameName>PointCloudFrame</frameName>
				<pointCloudCutoff>0.5</pointCloudCutoff>
				<distortionK1>0.00000001</distortionK1>
				<distortionK2>0.00000001</distortionK2>
				<distortionK3>0.00000001</distortionK3>
				<distortionT1>0.00000001</distortionT1>
				<distortionT2>0.00000001</distortionT2>
				<CxPrime>0</CxPrime>
				<Cx>0</Cx>
				<Cy>0</Cy>
				<focalLength>0</focalLength>
				<hackBaseline>0</hackBaseline>
			</plugin>
			
			
		</sensor>
	</link>
	
	<joint type="fixed" name="camera_fixation1">
        <pose>0 0 0.3 0 0 0</pose>
        <child>camera1</child>
        <parent>chassis</parent>
  </joint>
  
  
  
  
  
  
  
  
  
  	<link name="camera2">
		<pose>0 0 .5 0 0 1.57</pose>
		
		<collision name='collision'>
			<!--
			<origin xyz="0 0 0" rpy="0 0 0"/>
			-->
			<geometry>
			  <box>
			  	 <size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
		</collision>

		<visual name='visual'>
			<!--
			<origin xyz="0 0 ${3*chassisHeight}" rpy="0 0 0"/>
			-->
			<geometry>
			  <!--
			  <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
			  -->
			  <box>
			  	<size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
			<!--
			<material name="blue"/>
			-->
		</visual>

		<!--
		<inertial name='inertial'>
			<mass value="${cameraMass}" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
		</inertial>
		-->
		
		<sensor type="camera" name="camera2">
			<update_rate>30.0</update_rate>

			<camera name="head">
				<horizontal_fov>1.57</horizontal_fov>
			
				<image>
					<width>320</width>
					<height>240</height>
					<format>R8G8B8</format>
				</image>
			
				<clip>
					<near>0.02</near>
					<far>100</far>
				</clip>
				
				<lens>
					<type>gnomonical</type>
					<scale_to_hfov>true</scale_to_hfov>
					<cutoff_angle>1.57</cutoff_angle>
					<env_texture_size>512</env_texture_size>
				</lens>
			</camera>

			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
			  <alwaysOn>true</alwaysOn>
			  <updateRate>0.0</updateRate>
			  <cameraName>/RP_robot_model_0/camera2</cameraName>
			  <imageTopicName>image_raw</imageTopicName>
			  <cameraInfoTopicName>camera_info</cameraInfoTopicName>
			  <frameName>camera_link</frameName>
			  <hackBaseline>0.07</hackBaseline>
			  <distortionK1>0.0</distortionK1>
			  <distortionK2>0.0</distortionK2>
			  <distortionK3>0.0</distortionK3>
			  <distortionT1>0.0</distortionT1>
			  <distortionT2>0.0</distortionT2>
			</plugin>
	
		</sensor>
	</link>
	
	<joint type="fixed" name="camera_fixation2">
        <pose>0 0 0.3 0 0 0</pose>
        <child>camera2</child>
        <parent>chassis</parent>
  </joint>
  
  
  
  
  
  
  
  <link name="camera3">
		<pose>0 0 .5 0 0 3.1415</pose>
		
		<collision name='collision'>
			<!--
			<origin xyz="0 0 0" rpy="0 0 0"/>
			-->
			<geometry>
			  <box>
			  	 <size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
		</collision>

		<visual name='visual'>
			<!--
			<origin xyz="0 0 ${3*chassisHeight}" rpy="0 0 0"/>
			-->
			<geometry>
			  <!--
			  <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
			  -->
			  <box>
			  	<size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
			<!--
			<material name="blue"/>
			-->
		</visual>

		<!--
		<inertial name='inertial'>
			<mass value="${cameraMass}" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
		</inertial>
		-->
		
		<sensor type="camera" name="camera3">
			<update_rate>30.0</update_rate>

			<camera name="head">
				<horizontal_fov>1.57</horizontal_fov>
			
				<image>
					<width>320</width>
					<height>240</height>
					<format>R8G8B8</format>
				</image>
			
				<clip>
					<near>0.02</near>
					<far>100</far>
				</clip>
				
				<lens>
					<type>gnomonical</type>
					<scale_to_hfov>true</scale_to_hfov>
					<cutoff_angle>1.57</cutoff_angle>
					<env_texture_size>512</env_texture_size>
				</lens>
			</camera>

			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
			  <alwaysOn>true</alwaysOn>
			  <updateRate>0.0</updateRate>
			  <cameraName>/RP_robot_model_0/camera3</cameraName>
			  <imageTopicName>image_raw</imageTopicName>
			  <cameraInfoTopicName>camera_info</cameraInfoTopicName>
			  <frameName>camera_link</frameName>
			  <hackBaseline>0.07</hackBaseline>
			  <distortionK1>0.0</distortionK1>
			  <distortionK2>0.0</distortionK2>
			  <distortionK3>0.0</distortionK3>
			  <distortionT1>0.0</distortionT1>
			  <distortionT2>0.0</distortionT2>
			</plugin>
	
		</sensor>
	</link>
	
	<joint type="fixed" name="camera_fixation3">
        <pose>0 0 0.3 0 0 0</pose>
        <child>camera3</child>
        <parent>chassis</parent>
  </joint>
  
  
  
  
  <link name="camera4">
		<pose>0 0 .5 0 0 -1.57</pose>
		
		<collision name='collision'>
			<!--
			<origin xyz="0 0 0" rpy="0 0 0"/>
			-->
			<geometry>
			  <box>
			  	 <size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
		</collision>

		<visual name='visual'>
			<!--
			<origin xyz="0 0 ${3*chassisHeight}" rpy="0 0 0"/>
			-->
			<geometry>
			  <!--
			  <box size="${cameraSize} ${cameraSize} ${cameraSize}"/>
			  -->
			  <box>
			  	<size>0.1 0.1 0.1</size>
			  </box>
			</geometry>
			<!--
			<material name="blue"/>
			-->
		</visual>

		<!--
		<inertial name='inertial'>
			<mass value="${cameraMass}" />
			<origin xyz="0 0 0" rpy="0 0 0"/>
			<box_inertia m="${cameraMass}" x="${cameraSize}" y="${cameraSize}" z="${cameraSize}" />
		</inertial>
		-->
		
		<sensor type="camera" name="camera4">
			<update_rate>30.0</update_rate>

			<camera name="head">
				<horizontal_fov>1.57</horizontal_fov>
			
				<image>
					<width>320</width>
					<height>240</height>
					<format>R8G8B8</format>
				</image>
			
				<clip>
					<near>0.02</near>
					<far>100</far>
				</clip>
				
				<lens>
					<type>gnomonical</type>
					<scale_to_hfov>true</scale_to_hfov>
					<cutoff_angle>1.57</cutoff_angle>
					<env_texture_size>512</env_texture_size>
				</lens>
			</camera>

			<plugin name="camera_controller" filename="libgazebo_ros_camera.so">
			  <alwaysOn>true</alwaysOn>
			  <updateRate>0.0</updateRate>
			  <cameraName>/RP_robot_model_0/camera4</cameraName>
			  <imageTopicName>image_raw</imageTopicName>
			  <cameraInfoTopicName>camera_info</cameraInfoTopicName>
			  <frameName>camera_link</frameName>
			  <hackBaseline>0.07</hackBaseline>
			  <distortionK1>0.0</distortionK1>
			  <distortionK2>0.0</distortionK2>
			  <distortionK3>0.0</distortionK3>
			  <distortionT1>0.0</distortionT1>
			  <distortionT2>0.0</distortionT2>
			</plugin>
	
		</sensor>
	</link>
	
	<joint type="fixed" name="camera_fixation4">
        <pose>0 0 0.3 0 0 0</pose>
        <child>camera4</child>
        <parent>chassis</parent>
  </joint>
	  
      </model>
    
    
    </sdf>
